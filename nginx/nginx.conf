# nginx/nginx.conf
events {
    worker_connections 1024;
}

http {
    # Параметры CORS для API
    map $http_origin $cors_header {
        default "";
        "~^https?://(localhost|your-domain\.com|another-domain\.com)(:[0-9]+)?$" $http_origin;
    }

    server {
        listen 80;  # или 443 ssl; если будете использовать SSL
        server_name your-domain.com; # замените на ваш домен

        # Отдаём фронтенд (статические файлы)
        location / {
            alias /usr/share/nginx/html/;
            try_files $uri $uri/ /index.html; # для SPA
            add_header Cache-Control "no-cache";
        }

        # Проксируем API запросы на Node.js
        location /api/ {
            proxy_pass http://backend:3000/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # CORS заголовки
            add_header Access-Control-Allow-Origin $cors_header;
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
            add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization";
            add_header Access-Control-Allow-Credentials true;

            # Ответ на preflight-запросы
            if ($request_method = 'OPTIONS') {
                add_header Access-Control-Allow-Origin $cors_header;
                add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
                add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization";
                add_header Access-Control-Allow-Credentials true;
                add_header Content-Length 0;
                add_header Content-Type text/plain;
                return 204;
            }
        }

        # Проксируем WebSocket (для Socket.IO)
        location /socket.io/ {
            proxy_pass http://backend:3000;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Проксируем статические файлы (изображения)
        location /uploads/ {
            alias /app/uploads/;
            expires 1y;
            add_header Cache-Control "public, immutable";
        }
    }
}